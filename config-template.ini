; IMPORTANT: YOU MUST UPDATE anything that says YOU MUST UPDATE
; If you have multiple experiments, set the experiment_name
; programatically.
; YOU SHOULD UPDATE are things that replace command line arguments.

[BEHAVIORS]
    ; This named tuple helps keep track of the behavior strings that we use when annotating.
    ; IMPORTANT: do not change the order of this array. It must match the behavior SVM assumed order.
printable = ['Rest', 'Cruise', 'Burst', 'CCW Turn', 'CW Turn', 'Course Correction', 'Unknown']
names = ['rest', 'cruise', 'burst', 'turn_ccw', 'turn_cw', 'course_correction', 'unknown']
symbols = ['.', '|', '^', '<', '>', 'C', 'U']
    ; Colors from matplotlib tab10
colors = [
        [0.12156862745098039, 0.4666666666666667, 0.7058823529411765, 1.0],
        [1.0, 0.4980392156862745, 0.054901960784313725, 1.0],
        [0.17254901960784313, 0.6274509803921569, 0.17254901960784313, 1.0],
        [0.8392156862745098, 0.15294117647058825, 0.1568627450980392, 1.0],
        [0.5803921568627451, 0.403921568627451, 0.7411764705882353, 1.0],
        [0.5490196078431373, 0.33725490196078434, 0.29411764705882354, 1.0],
        [0, 0, 0, 1.0]
    ]

[BEHAVIOR_ANNOTATION]
poses_per_window = 13
; rest epsilon was fit to training data
rest_epsilon = 0.017964353133129503

[CROP_TRACKER]
crop_width = 400
crop_height = 400
subsample_factor = 8

[EXPERIMENT DETAILS]
    ; default experiment name
; YOU SHOULD UPDATE
experiment_name = experiment_name_here
; YOU MUST UPDATE
; whether individual fish were tracked during the experiment
; this means the same fish name has multiple assay measurements
; and the name of the fish in one assay matches the name in the other assay.
; If fish identities were not tracked over time, add an entry
; for the experiment as "false"
individuals_were_tracked = false

    ; All possible assay labels in the experiment, must be integers
; YOU MUST UPDATE
assay_labels = [-1, 1, 2, 3, 4, 5, 6, 7, 8]

    ; Label for control assay (e.g., preinjury, pretreatment)
    ; If you are just comparing uninjured mutants at a single time point,
    ;   consider using assay label -1 for the control and 1 for the mutant
    ;   and don't forget to give them different group names.
control_assay_label = -1


[FLOW]
; cm/s
none = 0
; cm/s
slow = 10
; cm/s
fast = 20
; arbitrary
has_flow = -15

none_start = 0
slow_start = 21000
fast_start = 42000
expected_final_frame = 62999

[FOLDERS]
    ; Use config.getpath
; YOU SHOULD UPDATE
cache_root = /path/to/where/you/want/to/save/all/experiments

[MACHINE_LEARNING]
poses_per_window = 13
; 13 is best (preliminary analysis)
lstm_min_seq_len = 15
predict_feature = smoothed_angles

[PLOTTING]
    ; Use FishConfigParser.getfloatlist
    ; Colors from [matplotlib.cm.get_cmap('tab10')(x/10) for x in range(10)]
pca_colors = [
        [0.12156862745098039, 0.4666666666666667, 0.7058823529411765, 1.0],
        [1.0, 0.4980392156862745, 0.054901960784313725, 1.0],
        [0.17254901960784313, 0.6274509803921569, 0.17254901960784313, 1.0],
        [0.8392156862745098, 0.15294117647058825, 0.1568627450980392, 1.0],
        [0.5803921568627451, 0.403921568627451, 0.7411764705882353, 1.0],
        [0.5490196078431373, 0.33725490196078434, 0.29411764705882354, 1.0],
        [0.8901960784313725, 0.4666666666666667, 0.7607843137254902, 1.0],
        [0.4980392156862745, 0.4980392156862745, 0.4980392156862745, 1.0],
        [0.7372549019607844, 0.7411764705882353, 0.13333333333333333, 1.0],
        [0.09019607843137255, 0.7450980392156863, 0.8117647058823529, 1.0]
    ]

[POSE FILTERING]
    ; Filtering by likelihood score
min_likelihood_threshold = 0.5
    ; Filtering by distance from neighbors
angle_change_z_lim = 8
    ; Filtering by position, if pose closer than this to the edge, 
    ; it is likely affected too much by the wall to be reliable.
frame_rear_buffer_width = 25
frame_side_buffer_width = 20
; These bounds are 8 standard deviations beyond the mean in either direction, at each position on the fish.
;   From all basic-filtered poses in the EKAB tracking experiment, all fish, all assays:
;       Define upper bound for each angle as mean + 8 * std
;       And the lower bound as mean - 8 * std
;       Thus, each angle is allowed to have at most a z-score of 8.
angle_lower_bounds = [-0.70305549, -0.77300925, -0.9521809, -0.92369165, -0.9223614, -1.05809586, -1.33867952, -1.4647932]
angle_upper_bounds = [0.69119073, 0.75849249, 0.93750299, 0.92106017, 0.92995757, 1.06620904, 1.34977321, 1.48239375]
; Filtering caudal fin length
max_caudal_fin_length = 80

[POSES]
points_per_pose = 10
    ; pixels, fish longer than this may be falsely annotated.
    ; SplineSmoother ignores this in favor of observed poses
    ; if an array of poses are used as input.
max_expected_fish_length = 200

[POSE_SPACE_TRANSFORMER]
k_means_for_stratified_sampling = 12
num_pcs = 4
poses_to_sample_per_assay = 1000

[RHEOTAXIS]
with_flow = 2
against_flow = -2
not_quite_with_flow = 1
not_quite_against_flow = -1

[TEST]
test = false

[VIDEO]
    ; Assumed dimensions of original video
    ; These values are only used if the scripts
    ; do not find a matching video file or .ctlog file.
default_video_height = 1992
default_video_width = 560
    ; Dimensions of cropped, but not rescaled, videos
crop_width = 280
crop_height = 1992
    ; Divisor for height and width of rescaled video.
scale_divisor = 2
    ; Default/expected frames per second
fps = 70
    ; length of the swim tunnel in centimeters
tunnel_length_cm = 28
